// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef ARMSUBSYSTEM_H
#define ARMSUBSYSTEM_H
#include "frc/commands/Subsystem.h"
#include "frc/WPILib.h"
#include "rev/CANSparkMax.h"
#include "rev/CANPIDController.h"
#include "rev/CANEncoder.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class armSubsystem: public frc::Subsystem {
private:
	// It's desirable that everything possible is private except
	// for methods that implement subsystem capabilities
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	//std::shared_ptr<rev::CANSparkMax> m_turretMotor;
	std::shared_ptr<rev::CANSparkMax> m_S3Motor;
	std::shared_ptr<rev::CANSparkMax> m_S2Motor;
	//std::shared_ptr<rev::CANSparkMax> m_S1Motor;
	//std::shared_ptr<rev::CANSparkMax> m_wristMotor;
	//std::shared_ptr<rev::CANSparkMax> m_clawMotor;

	//std::shared_ptr<rev::CANPIDController> PID_turret;
	std::shared_ptr<rev::CANPIDController> PID_S3;
	std::shared_ptr<rev::CANPIDController> PID_S2;
	//std::shared_ptr<rev::CANPIDController> PID_S1;
	//std::shared_ptr<rev::CANPIDController> PID_wrist;
	//std::shared_ptr<rev::CANPIDController> PID_claw;

	//std::shared_ptr<rev::CANEncoder> e_turret;
	std::shared_ptr<rev::CANEncoder> e_S3;
	std::shared_ptr<rev::CANEncoder> e_S2;
	//std::shared_ptr<rev::CANEncoder> e_S1;
	//std::shared_ptr<rev::CANEncoder> e_wrist;
	//std::shared_ptr<rev::CANEncoder> e_claw;

	double kP, kI, kD, kIz, kFF, kMaxOutput, kMinOutput;
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
public:
	armSubsystem();
	void InitDefaultCommand() override;
	void Periodic() override;
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
	void ClawAdjust(double adjustClaw);
	void ClawOpen(double clawSP);
	void ClawClosed(double clawSP);

	void WristPos0(double wristSP);
	void WristPos1(double wristSP);
	void WristPos2(double wristSP);
	void WristAdjust(double adjustWrist);

	void S1Pos0(double s1SP);
	void S1Pos1(double s1SP);
	void S1Adjust(double adjustS1);

	void S2Pos0(double s2SP);
	void S2Pos1(double s2SP);
	void S2Pos2(double s2SP);
	void S2Adjust(double adjustS2);

	void S3Pos0(double s3SP);
	void S3Pos1(double s3SP);
	void S3Adjust(double adjust31);

	void TurretSwivel(double adjustTurret);

	



};

#endif
